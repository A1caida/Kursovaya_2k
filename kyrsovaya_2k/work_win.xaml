<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:kyrsovaya_2k"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="kyrsovaya_2k.work_win"
        mc:Ignorable="d"
        Title="Библиотека" Height="450" Width="800" ResizeMode="NoResize">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="stylefortext" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="7"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" CornerRadius="7"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="styleforcombo" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="7"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>

        <TabControl Grid.ColumnSpan="2" Grid.RowSpan="5" >
            <TabItem Header="Общее" x:Name="general" >
                <!--////////////////////////////////////////////////-->

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                        <TextBlock x:Name="name" 
                                   FontFamily="fonts/#Noto Sans"
                                   FontSize="30" 
                                   Grid.ColumnSpan="2" 
                                   Grid.Row="1" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="borrowed" 
                                  ItemsSource="{Binding}" 
                                  AutoGenerateColumns="True" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Height="200" 
                                  Width="378"
                                  RowHeight="16" 
                                  IsReadOnly="True" 
                                  SelectionMode="Single" 
                                  Style="{DynamicResource DataGridStyle1}"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <TextBlock FontFamily="fonts/#Noto Sans"
                                   FontSize="30" 
                                   Grid.ColumnSpan="2" 
                                   Grid.Row="1" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1" Grid.RowSpan="5">
                        <DataGrid x:Name="recomendation" 
                                  ItemsSource="{Binding}" 
                                  AutoGenerateColumns="True" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Height="200" 
                                  Width="378"
                                  RowHeight="16" 
                                  IsReadOnly="True" 
                                  SelectionMode="Single" 
                                  Style="{DynamicResource DataGridStyle1}"/>
                    </Grid>
                    <Grid Grid.Row="7" Grid.Column="1">
                        <Button Click="log_off"
                                Content="Выйти из ситсемы"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White" FontSize="18" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="190" Height="30" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Поиск по авторам" x:Name="search_auths">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0">
                        <TextBox x:Name="sear" 
                                 Width="269" Height="20"
                                 HorizontalAlignment="Center"  
                                 VerticalAlignment="Center" 
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button x:Name="s_auth" 
                                Click="search_auth" 
                                Foreground="white"
                                Content="Поиск"  
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="170" Height="33" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="authors" 
                                  ItemsSource="{Binding}" 
                                  AutoGenerateColumns="True" 
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" 
                                  Height="200" Width="378" 
                                  RowHeight="16" 
                                  IsReadOnly="True" 
                                  SelectionMode="Single" 
                                  Style="{DynamicResource DataGridStyle1}" >
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <EventSetter Event="Control.MouseDoubleClick" Handler="Row_DoubleClick_auth"/>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                        </DataGrid>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1" Grid.RowSpan="5">
                        <DataGrid x:Name="books" 
                                  ItemsSource="{Binding}" 
                                  AutoGenerateColumns="True" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Height="200" Width="378" 
                                  RowHeight="16" 
                                  IsReadOnly="True" 
                                  SelectionMode="Single" 
                                  Style="{DynamicResource DataGridStyle1}">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <EventSetter Event="Control.MouseDoubleClick" Handler="Row_DoubleClick_book"/>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                        </DataGrid>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Header="Поиск по году" x:Name="search_year">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0">
                        <TextBox x:Name="yea" 
                                 Width="269" Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" 
                                 PreviewTextInput="NumericOnly"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button Click="book_yea" 
                                Content="Поиск"  
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center" 
                                Foreground="White">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="170" Height="33" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>

                        </Button>
                        <Button x:Name="borroww" 
                                Click="borrowww" 
                                Content="Взять"  
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center" 
                                Width="170" Height="33"   
                                Foreground="White">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="170" Height="33" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="boook" 
                                  ItemsSource="{Binding}" 
                                  AutoGenerateColumns="True" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Height="200" Width="378" 
                                  RowHeight="16" 
                                  IsReadOnly="True" 
                                  SelectionMode="Single" 
                                  Style="{DynamicResource DataGridStyle1}"/>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Header="Список газет" x:Name="search_magazin">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0">
                        <TextBox x:Name="sear_mag" 
                                 Width="269" Height="20" 
                                 HorizontalAlignment="Center"  
                                 VerticalAlignment="Center" 
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button Content="Поиск" 
                                Click="search_magaz" 
                                Width="170" Height="33" 
                                HorizontalAlignment="Center"  
                                VerticalAlignment="Center" 
                                Foreground="White">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="170" Height="33" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>             
                        </Button>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="magazin" 
                                  ItemsSource="{Binding}" 
                                  AutoGenerateColumns="True" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  Height="200" Width="378" 
                                  RowHeight="16" 
                                  IsReadOnly="True" 
                                  SelectionMode="Single" 
                                  Style="{DynamicResource DataGridStyle1}" />
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Header="Добавить" x:Name="add">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1" Grid.Column="1">
                        <TextBlock Text="Авторы" 
                                   FontFamily="fonts/#Noto Sans"
                                   FontSize="30"
                                   FontWeight="Medium"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1">
                        <TextBox x:Name="authsur" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"  
                                 PreviewTextInput="LettersOnly" 
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>

                        <TextBlock IsHitTestVisible="False" 
                                   Text="Фамилия" 
                                   FontSize="15"
                                   FontFamily="fonts/#Noto Sans"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"  
                                   Foreground="DarkGray"
                                   Width="190"
                                   Height="20"                  >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=authsur}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Grid Grid.Row="3" Grid.Column="1">
                        <TextBox x:Name="authname" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" 
                                 PreviewTextInput="LettersOnly" 
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="4" Grid.Column="1">
                        <TextBox x:Name="authpatr" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center"  
                                 VerticalAlignment="Center" 
                                 PreviewTextInput="LettersOnly"
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="5" Grid.Column="1">
                        <TextBox x:Name="authyear" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"   
                                 PreviewTextInput="NumericOnly"
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="6" Grid.Column="1">
                        <Button Click="add_authh"
                                Content="Добавить автора"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="190" Height="20" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="2">
                        <TextBlock Text="Книги" 
                                   FontFamily="fonts/#Noto Sans"
                                   FontSize="30"
                                   FontWeight="Medium"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="2">
                        <ComboBox x:Name="authorsid" 
                                  ItemsSource="{Binding}"
                                  Width="190" 
                                  Height="20" 
                                  FontFamily="fonts/#Noto Sans"
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center" 
                                  DisplayMemberPath="surname" 
                                  SelectedValuePath="id" 
                                  IsTextSearchEnabled="False" Style="{DynamicResource styleforcombo}" />
                    </Grid>
                    <Grid Grid.Row="3" Grid.Column="2">
                        <TextBox x:Name="bookname" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"   
                                 PreviewTextInput="LettersOnly"
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="4" Grid.Column="2">
                        <TextBox x:Name="yearbook" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"   
                                 PreviewTextInput="NumericOnly"
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="5" Grid.Column="2">
                        <TextBox x:Name="availbook" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"   
                                 PreviewTextInput="NumericOnly"
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="6" Grid.Column="2">
                        <Button Click="add_book"
                                Content="Добавить книгу"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="190" Height="20" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="3">
                        <TextBlock Text="Газеты" 
                                   FontFamily="fonts/#Noto Sans"
                                   FontSize="30"
                                   FontWeight="Medium"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="3">
                        <TextBox x:Name="magazname" 
                                 Width="190" 
                                 Height="20" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"   
                                 FontFamily="fonts/#Noto Sans"
                                 Style="{DynamicResource stylefortext}"/>
                    </Grid>
                    <Grid Grid.Row="3" Grid.Column="3">
                        <DatePicker Name="datepicker" 
                                    IsDropDownOpen="False" 
                                    SelectedDateFormat="Short" 
                                    Width="190" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    PreviewTextInput="NumericOnly"
                                    Text="Выберите дату"/>
                    </Grid>
                    <Grid Grid.Row="4" Grid.Column="3">
                        <Button Click="add_magazine"
                                Content="Добавить газету"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="190" Height="20" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                    <Grid Grid.Row="5" Grid.Column="3">
                        <TextBlock Text="Читатели" 
                                   FontFamily="fonts/#Noto Sans"
                                   FontSize="30"
                                   FontWeight="Medium"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="6" Grid.Column="3">
                        <Button Click="add_user"
                                Content="Регистрация"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White" >
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="TextElement.FontFamily" Value="fonts/#Noto Sans"/>
                                    <Setter Property="Background" Value="#5181b8"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2e5a8c"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border  Width="190" Height="20" 
                                            CornerRadius="7"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Забрать" x:Name="take">
                <!--////////////////////////////////////////////////-->
                <!--Так лень, сделай потом-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0">
                        <TextBox x:Name="searсhuser" Width="269" Height="20" HorizontalAlignment="Center"  VerticalAlignment="Center" PreviewTextInput="LettersOnly"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <Button x:Name="tbook" Click="take_book" Content="Забрать"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33" Margin="10,5,0,5"  />
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button x:Name="s_users" Click="search_users" Content="Поиск пользователя"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="170" Height="33" Margin="10,5,0,5"  />
                        <Button x:Name="s_books" Click="bookss_users" Content="Поиск по выделенному"  HorizontalAlignment="Right" VerticalAlignment="Center" Width="170" Height="33" Margin="0,5,10,5"  />

                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="users" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1" Grid.RowSpan="5">
                        <DataGrid x:Name="user_books" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Пользователи" x:Name="user_list">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0">
                        <TextBox x:Name="searchofusers" Width="269" Height="20" HorizontalAlignment="Center"  VerticalAlignment="Center" PreviewTextInput="LettersOnly"/>
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button x:Name="but" Click="sear_us" Content="Поиск"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33" Margin="10,5,0,5"  />

                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="listofusers" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single" >
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <EventSetter Event="Control.MouseDoubleClick" Handler="Row_DoubleClick"/>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                        </DataGrid>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1" Grid.RowSpan="5">
                        <DataGrid x:Name="logsofbooks" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single" />
                    </Grid>
                    <Grid Grid.Row="7" Grid.Column="1">
                        <Button x:Name="block" Click="ban_ham" Content="Заблокировать"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33" Margin="10,5,0,5"  />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Импорт/экспорт" x:Name="import_export">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button x:Name="imp" Click="imp_auth" Content="Импорт авторов"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33"  />
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <Button x:Name="exp" Click="exp_auth" Content="Экспорт авторов"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33"  />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1">
                        <TextBox x:Name="exp_name"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="import_data" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single" />
                    </Grid>
                    <Grid Grid.Row="3" Grid.Column="1">
                        <Button Click="imp_book" Content="импорт книг"  HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33"  />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Учет" x:Name="ychet">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="ychet_data" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single" />
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <ComboBox ItemsSource="{Binding}" x:Name="oper_id" HorizontalAlignment="Left" VerticalAlignment="Center" Width="178" Height="23" DisplayMemberPath="name" SelectedValuePath="id" IsTextSearchEnabled="False" IsEditable="False"   />
                        <Button x:Name="vpered_k_dengam" Content="Учет!" Click="money_ych" HorizontalAlignment="right" VerticalAlignment="Center" Width="186" Height="23"  />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1">
                        <TextBox x:Name="money" HorizontalAlignment="Left" VerticalAlignment="Center" Width="186" Height="23" />
                        <TextBox x:Name="lists" HorizontalAlignment="Right" VerticalAlignment="Center" Width="186" Height="23" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Поставщики" x:Name="postavshik">
                <!--////////////////////////////////////////////////-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0">
                        <TextBox x:Name="sear_post" HorizontalAlignment="Center" VerticalAlignment="Center"  Width="269" Height="20" />
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="0">
                        <Button Content="Поиск" Click="post_sear" HorizontalAlignment="Center" VerticalAlignment="Center" Width="170" Height="33"/>
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="0" Grid.RowSpan="5">
                        <DataGrid x:Name="post" ItemsSource="{Binding}" AutoGenerateColumns="True" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="378" RowHeight="16" IsReadOnly="True" SelectionMode="Single" />
                    </Grid>
                    <Grid Grid.Row="2" Grid.Column="1" Grid.RowSpan="5">
                        <Rectangle Fill="#FFF4F4F5" HorizontalAlignment="Center" VerticalAlignment="Center"  Stroke="Black"  Height="200" Width="378"/>
                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" Height="200" Width="376"/>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
